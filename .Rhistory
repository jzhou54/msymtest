x <- rchisq(100, df=5)
library(msymtest)
mod.wilcox.test(x)
wilcox.test(x)
library(Rcpp)
cppFunction('int add(int x, int y, int z) {
int sum = x + y + z;
return sum;
}')
add
.libPaths()
remove.packages("msymtest")
devtools::install_github("jzhou54/msymtest")
library(msymtest)
p <- array()
pp <- array()
MC <- 1000
p <- array()
pp <- array()
MC <- 1000
start1 <- Sys.time()
for (i in 1:MC){
x <- rchisq(100, df=5)
p[i] <- mod.wilcox.test(x)
}
end1 <- Sys.time()
end1 - start1
start2 <- Sys.time()
for (i in 1:MC){
x <- rchisq(100, df=5)
pp[i] <- wilcox.test(x)
}
end2 <- Sys.time()
end2 - start2
start1 <- Sys.time()
for (i in 1:MC){
x <- rchisq(100, df=5)
p[i] <- mod.wilcox.test(x)
}
end1 <- Sys.time()
end1 - start1
start2 <- Sys.time()
for (i in 1:MC){
x <- rchisq(100, df=5)
pp[i] <- wilcox.test(x)
}
end2 <- Sys.time()
end2 - start2
library(Rcpp)
cppFunction('int add(int x, int y, int z) {
int sum = x + y + z;
return sum;
}')
cppFunction('int add(int x, int y, int z) {
int sum = x + y + z;
return sum;
}')
library(rbenchmark)
BiocManager::install("rbenchmark")
f<- function(n) {
if (n < 2) return(n)
return(f(n-1) + f(n-2))
}
library(rbenchmark)
benchmark(f(10), f(15), f(20))
cppFunction('int g(int n) {
if (n<2) return(n);
return(g(n-1) + g(n-2))
}
')
install.packages("RcppArmadillo")
sourceCpp("~/Desktop/rcppexample.cpp")
